{"version":3,"sources":["components/Loader.tsx","components/Banner.tsx","utils.ts","routes/Home.tsx","api.ts","routes/TvShow.tsx","components/Header.tsx","Router.tsx","styles/GlobalStyle.tsx","App.tsx","index.tsx","styles/theme.ts"],"names":["Loading","styled","div","Loader","style","BannerBox","motion","props","bg","file","makeImagePath","BannerContainer","Banner","isLoading","data","position","left","top","transform","results","backdrop_path","initial","opacity","animate","transition","delay","className","title","overview","Home","useQuery","fetch","process","then","res","json","movieNowData","TvShow","Nav","header","Logo","UnderLine","Gnb","ul","theme","colors","main","Search","form","bdRadius","SearchIcon","button","fontColor","SearchInput","input","logoVariants","init","fillOpacity","hover","duration","repeat","Infinity","searchIconVariants","scale","toggle","Header","useState","searching","setSearching","searchInputElement","useRef","homeMatch","useMatch","tvMatch","navAni","useAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","background","searchAni","searchIconAni","width","current","focus","to","svg","variants","whileHover","xmlns","viewBox","d","fill","layoutId","onSubmit","event","preventDefault","type","onClick","prev","placeholder","ref","onBlur","Router","basename","path","element","GlobalStyle","createGlobalStyle","reset","bgColor","App","dotenv","config","queryClient","QueryClient","ReactDOM","render","StrictMode","boxColor","secondary","btn","client","document","getElementById"],"mappings":"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","file":"static/js/main.2f8fcdc9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface styleObj {\n  [key: string]: string;\n}\n\ninterface styleProps {\n  style: styleObj;\n}\n\nconst Loading = styled.div`\n  text-align: center;\n  padding: 1em 0;\n`;\n\nconst Loader = ({ style }: styleProps) => {\n  return <Loading style={style}>Loading...</Loading>;\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport Loader from 'components/Loader';\nimport { makeImagePath } from 'utils';\nimport { AnimatePresence } from 'framer-motion';\nimport { motion } from 'framer-motion';\n\nconst BannerBox = styled(motion.div)<{ bg: string }>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 0;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 1)),\n    ${(props) => props.bg && `url(${makeImagePath(props.bg)})`};\n  background-size: cover;\n  background-position: center;\n  .txt-container {\n    position: absolute;\n    left: 2%;\n    bottom: 20%;\n    .txt__title {\n      font-size: 2.5rem;\n      font-weight: 900;\n      margin-bottom: 1em;\n    }\n    .txt__description {\n      line-height: 1.5;\n      max-width: 569px;\n      word-break: keep-all;\n    }\n  }\n`;\n\nconst BannerContainer = styled.div`\n  padding-bottom: 56.25%;\n  position: relative;\n  z-index: 0;\n`;\n\ninterface BannerProps {\n  isLoading: boolean;\n  data: {\n    results: [\n      {\n        title: string;\n        overview: string;\n        backdrop_path: string;\n      }\n    ];\n  };\n}\n\nconst Banner = ({ isLoading, data }: BannerProps) => {\n  return (\n    <BannerContainer>\n      {isLoading ? (\n        <Loader\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        />\n      ) : (\n        <BannerBox\n          bg={data.results[0].backdrop_path || ''}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { delay: 0.5 } }}\n        >\n          {data ? (\n            <div className=\"txt-container\">\n              <div className=\"txt__title\">{data.results[0].title}</div>\n              <div className=\"txt__description\">{data.results[0].overview}</div>\n            </div>\n          ) : null}\n        </BannerBox>\n      )}\n    </BannerContainer>\n  );\n};\n\nexport default Banner;\n","export const makeImagePath = (file: string, size: string = 'w1280') => {\n  return `https://image.tmdb.org/t/p/${size}${file}`;\n};\n","import { getMovieNowPlaying } from 'api';\nimport Banner from 'components/Banner';\nimport { useQuery } from 'react-query';\n\nconst Home = () => {\n  const { isLoading: isLoading, data: movieNowData } = useQuery(\n    'movieNowPlaying',\n    () => getMovieNowPlaying()\n  );\n\n  return (\n    <>\n      <Banner isLoading={isLoading} data={movieNowData} />\n    </>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieNowPlaying = () => {\n  return fetch(\n    `${BASE_URL}/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n","const TvShow = () => {\n  return <h1>TvShow</h1>;\n};\n\nexport default TvShow;\n","import { Link, useMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion, useAnimation, useViewportScroll } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Nav = styled(motion.header)`\n  display: flex;\n  /* align-items: center; */\n  background: rgba(0, 0, 0, 1);\n  padding: 0 1em;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: 10;\n`;\n\nconst Logo = styled.div`\n  width: 100px;\n  margin-right: 2em;\n  a {\n    padding: 1em 0;\n  }\n`;\n\nconst UnderLine = styled(motion.div)``;\n\nconst Gnb = styled.ul`\n  display: flex;\n  li {\n    position: relative;\n    a {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      padding: 0 1em;\n    }\n    ${UnderLine} {\n      height: 2px;\n      background: ${(props) => props.theme.colors.main};\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      margin: 0 auto;\n      width: 100%;\n    }\n  }\n`;\n\nconst Search = styled(motion.form)`\n  margin: 0.5em 0;\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n  padding: 0.25em 0.5em;\n  position: relative;\n  width: 20px;\n  border-radius: ${(props) => props.theme.bdRadius};\n`;\n\nconst SearchIcon = styled(motion.button)`\n  width: 20px;\n  flex-shrink: 0;\n  svg {\n    path {\n      fill: ${(props) => props.theme.fontColor};\n    }\n  }\n`;\n\nconst SearchInput = styled(motion.input)`\n  padding: 0;\n  color: ${(props) => props.theme.fontColor};\n  overflow: hidden;\n  width: 30px;\n  border: none;\n  background: transparent;\n  flex-grow: 1;\n  flex-shrink: 1;\n`;\n\nconst logoVariants = {\n  init: {\n    fillOpacity: 1,\n  },\n  hover: {\n    fillOpacity: 0,\n    transition: {\n      duration: 0.5,\n      repeat: Infinity,\n    },\n  },\n};\n\nconst searchIconVariants = {\n  init: {\n    scale: 1,\n  },\n  toggle: {\n    scale: [1.2, 1],\n    transition: {\n      duration: 0.2,\n    },\n  },\n};\n\nconst Header = () => {\n  const [searching, setSearching] = useState(false);\n  const searchInputElement = useRef<HTMLInputElement>(null);\n\n  const homeMatch = useMatch('/');\n  const tvMatch = useMatch('/tv');\n\n  // 스크롤\n  const navAni = useAnimation();\n  const { scrollY } = useViewportScroll();\n\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAni.start({\n          background: 'rgba(0, 0, 0, 0)',\n        });\n      } else {\n        navAni.start({\n          background: 'rgba(0, 0, 0, 1)',\n        });\n      }\n    });\n  }, [scrollY, navAni]);\n\n  // 이벤트를 트리거로 사용가능.\n  const searchAni = useAnimation();\n  const searchIconAni = useAnimation();\n  if (searching) {\n    searchIconAni.start('toggle');\n\n    searchAni.start({\n      width: '220px',\n      background: 'rgba(55, 55, 55, 0.4)',\n    });\n\n    searchInputElement.current?.focus();\n  } else {\n    searchAni.start({\n      width: '20px',\n      background: 'rgba(0, 0, 0, 0)',\n    });\n  }\n\n  const onBlur = () => {\n    setSearching((prev) => !prev);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Nav animate={navAni}>\n        <Logo>\n          <Link to=\"/\">\n            <motion.svg\n              variants={logoVariants}\n              initial={'init'}\n              whileHover={'hover'}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 1024 276.742\"\n            >\n              <path\n                d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n                fill=\"#d81f26\"\n              />\n            </motion.svg>\n          </Link>\n        </Logo>\n        <Gnb>\n          <li>\n            <Link to=\"/\">Home</Link>\n            {homeMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li>\n          <li>\n            <Link to=\"/tv\">TV</Link>\n            {tvMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li>\n        </Gnb>\n        <Search\n          onSubmit={onSubmit}\n          animate={searchAni}\n          transition={{ type: 'liner', delay: 0.2 }}\n        >\n          <SearchIcon\n            onClick={() => setSearching((prev) => !prev)}\n            variants={searchIconVariants}\n            animate={searchIconAni}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path d=\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\" />\n            </svg>\n          </SearchIcon>\n          <SearchInput\n            placeholder=\"검색\"\n            ref={searchInputElement}\n            onBlur={onBlur}\n          />\n        </Search>\n      </Nav>\n    </>\n  );\n};\n\nexport default Header;\n","import Home from 'routes/Home';\nimport TvShow from 'routes/TvShow';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Header from 'components/Header';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/tv\" element={<TvShow />} />\n        {/* <Route path=\"/:coinId\" element={<Coin />}>\n          <Route path=\"chart\" element={<Chart />} />\n          <Route path=\"price\" element={<Price />} />\n        </Route> */}\n        {/* <Route path=\"/*\" element={<NotFound />} /> */}\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n  html, body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.fontColor};\n    font-size: 16px;\n    height: 200vh;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  img,\n  svg {\n    width: 100%;\n  }\n  a {\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n  button {\n    border: none;\n    background: transparent;\n    padding: 0;\n    outline: none;\n    cursor: pointer;\n  }\n  input {\n    -webkit-appearance: none; // 안쪽으로 생기는 그림자 제거\n    -webkit-border-radius: 0; // 둥근 모서리 제거\n    border: 1px solid #000;\n    outline: none;\n    height: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport Router from 'Router';\nimport GlobalStyle from 'styles/GlobalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from 'styles/theme';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport dotenv from 'dotenv';\ndotenv.config();\n\n// Create a client\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#efefef',\n  boxColor: '#fff',\n  bdRadius: '8px',\n  fontColor: '#000',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#222',\n  boxColor: '#333',\n  bdRadius: '8px',\n  fontColor: '#fff',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n"],"sourceRoot":""}