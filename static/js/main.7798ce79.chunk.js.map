{"version":3,"sources":["api.ts","components/Loader.tsx","utils.ts","components/Banner.tsx","atoms.ts","components/Movie.tsx","components/Slider.tsx","routes/Home.tsx","components/Header.tsx","routes/Search.tsx","components/Modal.tsx","components/ModalContainer.tsx","Router.tsx","styles/GlobalStyle.tsx","App.tsx","index.tsx","styles/theme.ts"],"names":["BASE_URL","Loading","styled","div","Loader","style","makeImagePath","file","size","BannerBox","motion","BannerContainer","BannerImg","Banner","isLoading","data","dataLength","results","length","dataRandomIndex","Math","floor","random","position","left","top","transform","initial","opacity","animate","transition","delay","className","src","backdrop_path","title","overview","React","memo","isModalIdAtom","atom","key","default","MovieScaleBox","props","theme","boxColor","MovieBox","a","movieSize","ImgBox","img","Movie","id","movieIndex","movieOnClick","movieHoverAni","useAnimation","hoverMovie","isHover","start","scale","zIndex","onClick","event","onHoverStart","onHoverEnd","onTapStart","SliderBox","SliderRow","Title","h2","Slider","constraintsRef","useRef","setIsModal","useSetRecoilState","preventDefault","dragging","duration","ref","drag","dragConstraints","dragMomentum","dragElastic","onDragStart","onDragTransitionEnd","map","movie","MainContents","Home","useQuery","fetch","process","then","res","json","isNowLoading","movieNowData","isPopularLoading","moviePopularData","isUpcomingLoading","movieUpcomingData","isTopRateLoading","movieTopRateData","Nav","header","Logo","UnderLine","Gnb","ul","colors","main","Search","form","bdRadius","SearchIcon","button","fontColor","SearchInput","input","logoVariants","init","fillOpacity","hover","repeat","Infinity","searchIconVariants","toggle","Header","useState","searching","setSearching","keyword","setKeyword","searchInputElement","homeMatch","useMatch","navAni","scrollY","useViewportScroll","useEffect","onChange","get","background","searchIconAni","searchAni","width","border","current","focus","navigate","useNavigate","to","svg","variants","whileHover","xmlns","viewBox","d","fill","layoutId","onSubmit","type","prev","name","value","placeholder","onBlur","currentTarget","SearchContainer","search","useLocation","URLSearchParams","replace","getMovieSearch","isMovieLoading","movieSearchData","gridColumn","textAlign","fontSize","paddingTop","ModalOverlay","ModalBox","bgColor","BtnClose","BgBox","bg","Modal","setIsModalId","getMovieDetail","detailLoading","movieDetailData","exit","ModalContainer","isModalId","useRecoilValue","AnimatePresence","Router","basename","path","element","GlobalStyle","createGlobalStyle","reset","App","dotenv","config","queryClient","QueryClient","ReactDOM","render","StrictMode","secondary","btn","client","document","getElementById"],"mappings":"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","file":"static/js/main.7798ce79.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieNowPlaying = () => {\n  return fetch(\n    `${BASE_URL}/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMovieDetail = (id: string) => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMoviePopular = () => {\n  return fetch(\n    `${BASE_URL}/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMovieUpcoming = () => {\n  return fetch(\n    `${BASE_URL}/movie/upcoming?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMovieTopRate = () => {\n  return fetch(\n    `${BASE_URL}/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMovieSearch = (keyword: string) => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${keyword}&page=1&include_adult=false`\n  ).then((res) => res.json());\n};\n\nexport interface MovieProps {\n  id: number;\n  title: string;\n  overview: string;\n  backdrop_path: string;\n}\n\nexport interface MoviesData {\n  results: MovieProps[];\n}\n","import styled from 'styled-components';\n\ninterface styleObj {\n  [key: string]: string;\n}\n\ninterface styleProps {\n  style?: styleObj;\n}\n\nconst Loading = styled.div`\n  text-align: center;\n  padding: 1em 0;\n`;\n\nconst Loader = ({ style }: styleProps) => {\n  return <Loading style={style}>Loading...</Loading>;\n};\n\nexport default Loader;\n","export const makeImagePath = (file: string, size: string = 'w1280') => {\n  if (!file) {\n    return 'img/no_thumnail.png';\n  } else {\n    return `https://image.tmdb.org/t/p/${size}${file}`;\n  }\n};\n","import styled from 'styled-components';\nimport Loader from 'components/Loader';\nimport { makeImagePath } from 'utils';\nimport { motion } from 'framer-motion';\nimport React from 'react';\n\nconst BannerBox = styled(motion.div)`\n  position: relative;\n  .txt-container {\n    position: absolute;\n    left: 2%;\n    bottom: 30%;\n    .txt__title {\n      font-size: 2.5rem;\n      font-weight: 900;\n      margin-bottom: 1em;\n    }\n    .txt__description {\n      line-height: 1.5;\n      max-width: 569px;\n      word-break: keep-all;\n    }\n  }\n`;\n\nconst BannerContainer = styled.div``;\n\nconst BannerImg = styled.div`\n  padding-bottom: 56.25%;\n  position: relative;\n  z-index: 0;\n  overflow: hidden;\n  .cover {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 1;\n    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 1));\n  }\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 100%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\ninterface BannerProps {\n  isLoading: boolean;\n  data: {\n    results: [\n      {\n        title: string;\n        overview: string;\n        backdrop_path: string;\n      }\n    ];\n  };\n}\n\nconst Banner = ({ isLoading, data }: BannerProps) => {\n  const dataLength: number = data?.results.length || 0;\n  const dataRandomIndex = Math.floor(Math.random() * dataLength);\n\n  return (\n    <BannerContainer>\n      {isLoading ? (\n        <Loader\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        />\n      ) : (\n        <BannerBox\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { delay: 0.5 } }}\n        >\n          <BannerImg>\n            <div className=\"cover\"></div>\n            <img\n              src={makeImagePath(data.results[dataRandomIndex].backdrop_path)}\n            />\n          </BannerImg>\n          {data ? (\n            <div className=\"txt-container\">\n              <div className=\"txt__title\">\n                {data.results[dataRandomIndex].title}\n              </div>\n              <div className=\"txt__description\">\n                {data.results[dataRandomIndex].overview}\n              </div>\n            </div>\n          ) : null}\n        </BannerBox>\n      )}\n    </BannerContainer>\n  );\n};\n\nexport default React.memo(Banner);\n","import { atom } from 'recoil';\n\nexport const isModalIdAtom = atom({\n  key: 'isModalShow',\n  default: '',\n});\n","import styled from 'styled-components';\nimport { motion, useAnimation } from 'framer-motion';\nimport { makeImagePath } from 'utils';\nimport { MovieProps } from 'api';\n\nconst MovieScaleBox = styled(motion.div)`\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.boxColor};\n  position: relative;\n  padding-bottom: 56.25%;\n`;\n\nconst MovieBox = styled(motion.a)<{ movieSize: string }>`\n  width: ${(props) => props.movieSize};\n  flex-shrink: 0;\n  cursor: pointer;\n  position: relative;\n  /* &:first-child {\n    ${MovieScaleBox} {\n      transform-origin: 0%;\n    }\n  }\n  &:last-child {\n    ${MovieScaleBox} {\n      transform-origin: 100%;\n    }\n  } */\n  .movie__title {\n    position: absolute;\n    bottom: 1em;\n    left: 0;\n    background: rgba(0, 0, 0, 0.6);\n    padding: 1em;\n  }\n`;\n\nconst ImgBox = styled.img`\n  position: absolute;\n  width: 100%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\ninterface IMovieProps extends MovieProps {\n  movieIndex: number;\n  movieOnClick(event: React.MouseEvent<HTMLAnchorElement>, id: number): void;\n  movieSize?: string;\n}\n\nconst Movie = ({\n  id,\n  title,\n  overview,\n  backdrop_path,\n  movieIndex,\n  movieOnClick,\n  movieSize,\n}: IMovieProps) => {\n  const movieHoverAni = useAnimation();\n\n  const hoverMovie = (isHover: boolean) => {\n    if (isHover) {\n      movieHoverAni.start({\n        scale: 1.2,\n        zIndex: 1,\n        transition: { delay: 0.2 },\n      });\n    } else {\n      movieHoverAni.start({\n        scale: 1,\n        zIndex: 0,\n        transition: { delay: 0.2 },\n      });\n    }\n  };\n\n  return (\n    <MovieBox\n      key={id}\n      initial={{ opacity: 0 }}\n      animate={{\n        opacity: 1,\n        transition: { delay: 0.5 + 0.1 * movieIndex },\n      }}\n      onClick={(event) => movieOnClick(event, id)}\n      movieSize={movieSize || '100%'}\n    >\n      <MovieScaleBox\n        animate={movieHoverAni}\n        onHoverStart={() => hoverMovie(true)}\n        onHoverEnd={() => hoverMovie(false)}\n        onTapStart={() => hoverMovie(false)}\n      >\n        <ImgBox src={makeImagePath(backdrop_path, 'w780')} />\n        <div className=\"movie__title\">{title}</div>\n      </MovieScaleBox>\n    </MovieBox>\n  );\n};\n\nexport default Movie;\n","import styled from 'styled-components';\nimport { motion, useAnimation } from 'framer-motion';\nimport React, { useRef, useState, useEffect } from 'react';\n\nimport { MovieProps, MoviesData } from 'api';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n\nimport { useNavigate } from 'react-router-dom';\nimport { isModalIdAtom } from 'atoms';\nimport Movie from './Movie';\n\nconst SliderBox = styled(motion.div)`\n  width: 100%;\n  overflow: hidden;\n  padding: 2em 0;\n  margin-bottom: 2.5em;\n`;\n\nconst SliderRow = styled(motion.div)<{ dataLength: number }>`\n  width: ${(props) =>\n    `calc((${props.theme.movieSize} + 10px) * ${props.dataLength} + 10px)`};\n  display: flex;\n  gap: 10px;\n  padding: 0 10px;\n  flex-wrap: nowrap;\n`;\n\nconst Title = styled(motion.h2)`\n  z-index: 2;\n  position: relative;\n  font-size: 1.75rem;\n  font-weight: 700;\n  padding-left: 0.5em;\n  margin: 0;\n`;\n\ninterface SliderPorps extends MoviesData {\n  title: string;\n}\n\nconst Slider = ({ results, title }: SliderPorps) => {\n  // const [isHover, setIsHover] = useState(false);\n\n  const constraintsRef = useRef(null);\n  const setIsModal = useSetRecoilState(isModalIdAtom);\n\n  const movieOnClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    id: number\n  ) => {\n    event.preventDefault();\n    if (dragging) return;\n    setIsModal(id + '');\n  };\n\n  let dragging = false;\n\n  return (\n    <>\n      <Title\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5, delay: 0.7 }}\n      >\n        {title}\n      </Title>\n      <SliderBox ref={constraintsRef}>\n        <SliderRow\n          drag=\"x\"\n          dragConstraints={constraintsRef}\n          dragMomentum={false}\n          dragElastic={0}\n          dataLength={results.length}\n          onDragStart={() => (dragging = true)}\n          onDragTransitionEnd={() => (dragging = false)}\n        >\n          {results.map((movie: MovieProps, movieIndex: number) => {\n            return (\n              <Movie\n                key={movie.id}\n                {...movie}\n                movieIndex={movieIndex}\n                movieOnClick={movieOnClick}\n                movieSize={'280px'}\n              />\n            );\n          })}\n        </SliderRow>\n      </SliderBox>\n    </>\n  );\n};\n\nexport default React.memo(Slider);\n","import {\n  getMovieNowPlaying,\n  getMoviePopular,\n  getMovieTopRate,\n  getMovieUpcoming,\n} from 'api';\nimport Banner from 'components/Banner';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useRef } from 'react';\nimport Slider from 'components/Slider';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport ModalContainer from 'components/ModalContainer';\n\nconst MainContents = styled.div`\n  margin-top: -10vw;\n  margin-bottom: 5vh;\n`;\n\nconst Home = () => {\n  const { isLoading: isNowLoading, data: movieNowData } = useQuery(\n    ['movie', 'NowPlaying'],\n    () => getMovieNowPlaying()\n  );\n\n  const { isLoading: isPopularLoading, data: moviePopularData } = useQuery(\n    ['movie', 'Popular'],\n    () => getMoviePopular()\n  );\n\n  const { isLoading: isUpcomingLoading, data: movieUpcomingData } = useQuery(\n    ['movie', 'Upcoming'],\n    () => getMovieUpcoming()\n  );\n\n  const { isLoading: isTopRateLoading, data: movieTopRateData } = useQuery(\n    ['movie', 'TopRate'],\n    () => getMovieTopRate()\n  );\n\n  return (\n    <>\n      <Banner isLoading={isNowLoading} data={movieNowData} />\n      <MainContents>\n        {isNowLoading ? null : (\n          <Slider {...movieNowData} title={'현재 상영작'} />\n        )}\n        {isUpcomingLoading ? null : (\n          <Slider {...movieUpcomingData} title={'상영 예정작'} />\n        )}\n        {isPopularLoading ? null : (\n          <Slider {...moviePopularData} title={'인기 영화'} />\n        )}\n        {isTopRateLoading ? null : (\n          <Slider {...movieTopRateData} title={'최고 평점 영화'} />\n        )}\n      </MainContents>\n    </>\n  );\n};\n\nexport default Home;\n","import { Link, useMatch, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion, useAnimation, useViewportScroll } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Nav = styled(motion.header)`\n  display: flex;\n  /* align-items: center; */\n  background: rgba(0, 0, 0, 0.4);\n  padding: 0 1em;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: 10;\n`;\n\nconst Logo = styled.div`\n  width: 100px;\n  margin-right: 2em;\n  a {\n    padding: 1em 0;\n  }\n`;\n\nconst UnderLine = styled(motion.div)``;\n\nconst Gnb = styled.ul`\n  display: flex;\n  li {\n    position: relative;\n    a {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      padding: 0 1em;\n    }\n    ${UnderLine} {\n      height: 2px;\n      background: ${(props) => props.theme.colors.main};\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      margin: 0 auto;\n      width: 100%;\n    }\n  }\n`;\n\nconst Search = styled(motion.form)`\n  margin: 0.5em 0;\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n  padding: 0.25em 0.5em;\n  position: relative;\n  width: 20px;\n  border: 1px solid rgba(255, 255, 255, 0);\n  border-radius: ${(props) => props.theme.bdRadius};\n`;\n\nconst SearchIcon = styled(motion.button)`\n  width: 20px;\n  flex-shrink: 0;\n  svg {\n    path {\n      fill: ${(props) => props.theme.fontColor};\n    }\n  }\n`;\n\nconst SearchInput = styled(motion.input)`\n  padding: 0;\n  color: ${(props) => props.theme.fontColor};\n  overflow: hidden;\n  width: 30px;\n  border: none;\n  background: transparent;\n  flex-grow: 1;\n  flex-shrink: 1;\n`;\n\nconst logoVariants = {\n  init: {\n    fillOpacity: 1,\n  },\n  hover: {\n    fillOpacity: 0,\n    transition: {\n      duration: 0.5,\n      repeat: Infinity,\n    },\n  },\n};\n\nconst searchIconVariants = {\n  init: {\n    scale: 1,\n  },\n  toggle: {\n    scale: [1.2, 1],\n    transition: {\n      duration: 0.2,\n    },\n  },\n};\n\nconst Header = () => {\n  const [searching, setSearching] = useState(false);\n  const [keyword, setKeyword] = useState('');\n  const searchInputElement = useRef<HTMLInputElement>(null);\n\n  const homeMatch = useMatch('/');\n  // const tvMatch = useMatch('/tv');\n\n  // 스크롤\n  const navAni = useAnimation();\n  const { scrollY } = useViewportScroll();\n\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAni.start({\n          background: 'rgba(0, 0, 0, 1)',\n        });\n      } else {\n        navAni.start({\n          background: 'rgba(0, 0, 0, .4)',\n        });\n      }\n    });\n\n    if (searching) {\n      searchIconAni.start('toggle');\n\n      searchAni.start({\n        width: '220px',\n        background: 'rgba(55, 55, 55, 0.8)',\n        border: '1px solid rgba(255, 255, 255, 1)',\n      });\n\n      searchInputElement.current?.focus();\n    } else {\n      searchAni.start({\n        width: '20px',\n        background: 'rgba(0, 0, 0, 0)',\n        border: '1px solid rgba(255, 255, 255, 0)',\n      });\n    }\n  }, [scrollY, navAni, searching]);\n\n  // 이벤트를 트리거로 사용가능.\n  const searchAni = useAnimation();\n  const searchIconAni = useAnimation();\n\n  const onBlur = () => {\n    setSearching((prev) => !prev);\n  };\n\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setKeyword(event.currentTarget.value);\n  };\n\n  const navigate = useNavigate();\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // keyword 가 한글자도 없다면 return\n    if (!keyword) return;\n\n    navigate('/search?k=' + keyword);\n  };\n\n  return (\n    <>\n      <Nav animate={navAni}>\n        <Logo>\n          <Link to=\"/\">\n            <motion.svg\n              variants={logoVariants}\n              initial={'init'}\n              whileHover={'hover'}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 1024 276.742\"\n            >\n              <path\n                d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n                fill=\"#d81f26\"\n              />\n            </motion.svg>\n          </Link>\n        </Logo>\n        <Gnb>\n          <li>\n            <Link to=\"/\">Home</Link>\n            {homeMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li>\n          {/* <li>\n            <Link to=\"/tv\">TV</Link>\n            {tvMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li> */}\n        </Gnb>\n        <Search\n          onSubmit={onSubmit}\n          animate={searchAni}\n          transition={{ type: 'liner', delay: 0.2 }}\n        >\n          <SearchIcon\n            type=\"button\"\n            onClick={() => setSearching((prev) => !prev)}\n            variants={searchIconVariants}\n            animate={searchIconAni}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path d=\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\" />\n            </svg>\n          </SearchIcon>\n          <SearchInput\n            name=\"k\"\n            value={keyword}\n            placeholder=\"검색\"\n            ref={searchInputElement}\n            onBlur={onBlur}\n            onChange={onChange}\n          />\n        </Search>\n      </Nav>\n    </>\n  );\n};\n\nexport default React.memo(Header);\n","import { getMovieSearch, MovieProps } from 'api';\nimport { isModalIdAtom } from 'atoms';\nimport Loader from 'components/Loader';\nimport ModalContainer from 'components/ModalContainer';\nimport Movie from 'components/Movie';\nimport { useQuery } from 'react-query';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n  padding-top: 80px;\n  padding-left: 2em;\n  padding-right: 2em;\n  margin-bottom: 10vh;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 10px;\n`;\n\nconst Search = () => {\n  const { search } = useLocation();\n\n  const keyword = new URLSearchParams(search).get('k');\n\n  const navigate = useNavigate();\n\n  const setIsModal = useSetRecoilState(isModalIdAtom);\n\n  // 키워드가 없다면 홈화면으로 리다이렉트\n  if (!keyword) {\n    navigate('/', { replace: true });\n  }\n\n  const { isLoading: isMovieLoading, data: movieSearchData } = useQuery(\n    [keyword, 'Search'],\n    () => getMovieSearch(keyword + '')\n  );\n\n  const movieOnClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    id: number\n  ) => {\n    event.preventDefault();\n    setIsModal(id + '');\n  };\n\n  return (\n    <>\n      <SearchContainer>\n        {isMovieLoading ? (\n          <Loader\n            style={{\n              gridColumn: '1 / 5',\n              textAlign: 'center',\n              fontSize: '1.75rem',\n              paddingTop: '3em',\n            }}\n          />\n        ) : movieSearchData.results > 0 ? (\n          movieSearchData.results.map(\n            (movie: MovieProps, movieIndex: number) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  {...movie}\n                  movieIndex={movieIndex}\n                  movieOnClick={movieOnClick}\n                />\n              );\n            }\n          )\n        ) : (\n          <div\n            style={{\n              gridColumn: '1 / 5',\n              textAlign: 'center',\n              fontSize: '1.75rem',\n              paddingTop: '3em',\n            }}\n          >\n            데이터가 없습니다.\n          </div>\n        )}\n      </SearchContainer>\n    </>\n  );\n};\n\nexport default Search;\n","import { getMovieDetail, MovieProps } from 'api';\nimport { isModalIdAtom } from 'atoms';\nimport { useQuery } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { makeImagePath } from 'utils';\nimport Loader from './Loader';\nimport { motion, useAnimation } from 'framer-motion';\n\nconst ModalOverlay = styled(motion.div)`\n  background: rgba(0, 0, 0, 0.4);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 20;\n  width: 100%;\n  height: 100%;\n`;\nconst ModalBox = styled(motion.div)`\n  background: ${(props) => props.theme.bgColor};\n  box-shadow: 0px 0px 1px rgba(186, 186, 186, 0.2);\n  border-radius: 20px;\n  overflow: hidden;\n  position: fixed;\n  left: 50%;\n  top: 1em;\n  transform: translateX(-50%);\n  z-index: 30;\n  max-width: 569px;\n  width: 100%;\n  min-height: 700px;\n  padding-bottom: 2em;\n  .movie-txt-container {\n    padding: 2em 1em;\n    .movie__title {\n      font-size: 2.5rem;\n      font-weight: 900;\n      margin-bottom: 0.75em;\n    }\n    .movie__description {\n      padding-left: 0.25em;\n      line-height: 1.5;\n    }\n  }\n`;\n\nconst BtnClose = styled(motion.a)`\n  width: 35px;\n  height: 35px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  z-index: 31;\n  cursor: pointer;\n  background: #000;\n  box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);\n  padding: 5px;\n  border-radius: 50%;\n  svg {\n    width: 100%;\n    height: 100%;\n    path {\n      fill: #fff;\n    }\n  }\n`;\n\nconst BgBox = styled.div<{ bg: string }>`\n  padding-bottom: 56.25%;\n  position: relative;\n  background: ${(props) => props.theme.boxColor};\n  background-image: ${(props) => `url(${makeImagePath(props.bg, 'w1280')})`};\n  background-size: cover;\n  background-position: center;\n`;\n\ninterface IModalProps {\n  id: string;\n}\n\nconst Modal = ({ id }: IModalProps) => {\n  const navigate = useNavigate();\n  const setIsModalId = useSetRecoilState(isModalIdAtom);\n\n  const modalHide = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setIsModalId('');\n  };\n\n  const { isLoading: detailLoading, data: movieDetailData } =\n    useQuery<MovieProps>(['movieDetail', id], () => getMovieDetail(id));\n\n  return (\n    <>\n      <ModalOverlay\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.2 }}\n        exit={{ opacity: 0, transition: { delay: 0.2 } }}\n      />\n      <ModalBox\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.2 }}\n        exit={{ opacity: 0, transition: { delay: 0.2 } }}\n      >\n        <BtnClose\n          className=\"btn-close\"\n          onClick={modalHide}\n          exit={{ scale: [0.8, 1], transition: { duration: 0.2 } }}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n            <path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\" />\n          </svg>\n        </BtnClose>\n        {detailLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <BgBox bg={movieDetailData?.backdrop_path || ''} />\n            <div className=\"movie-txt-container\">\n              <div className=\"movie__title\">{movieDetailData?.title}</div>\n              <div className=\"movie__description\">\n                {movieDetailData?.overview}\n              </div>\n            </div>\n          </>\n        )}\n      </ModalBox>\n    </>\n  );\n};\n\nexport default Modal;\n","import { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Modal from 'components/Modal';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { isModalIdAtom } from 'atoms';\nimport { AnimatePresence } from 'framer-motion';\n\nconst ModalContainer = () => {\n  const isModalId = useRecoilValue(isModalIdAtom);\n\n  return (\n    <>\n      <AnimatePresence>\n        {isModalId ? <Modal id={isModalId + ''} /> : null}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default ModalContainer;\n","import Home from 'routes/Home';\nimport TvShow from 'routes/TvShow';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Header from 'components/Header';\nimport Search from 'routes/Search';\nimport ModalContainer from 'components/ModalContainer';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/search\" element={<Search />} />\n\n        {/* <Route path=\"/tv\" element={<TvShow />} /> */}\n        <Route path=\"/*\" element={<Home />} />\n      </Routes>\n      <ModalContainer />\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n  html, body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.fontColor};\n    font-size: 16px;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  img,\n  svg {\n    width: 100%;\n    vertical-align: top;\n  }\n  img {\n    pointer-events: none;\n  }\n  a {\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n  button {\n    border: none;\n    background: transparent;\n    padding: 0;\n    outline: none;\n    cursor: pointer;\n  }\n  input {\n    -webkit-appearance: none; // 안쪽으로 생기는 그림자 제거\n    -webkit-border-radius: 0; // 둥근 모서리 제거\n    border: 1px solid #000;\n    outline: none;\n    height: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport Router from 'Router';\nimport GlobalStyle from 'styles/GlobalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from 'styles/theme';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport dotenv from 'dotenv';\ndotenv.config();\n\n// Create a client\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <QueryClientProvider client={queryClient}>\n        <RecoilRoot>\n          <App />\n        </RecoilRoot>\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#efefef',\n  boxColor: '#fff',\n  bdRadius: '8px',\n  fontColor: '#000',\n  movieSize: '280px',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#000',\n  boxColor: '#333',\n  bdRadius: '8px',\n  fontColor: '#fff',\n  movieSize: '280px',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n"],"sourceRoot":""}