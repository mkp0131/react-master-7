{"version":3,"sources":["api.ts","components/Loader.tsx","utils.ts","components/Banner.tsx","atoms.ts","components/Movie.tsx","components/Slider.tsx","components/Modal.tsx","components/ModalContainer.tsx","routes/Home.tsx","routes/TvShow.tsx","components/Header.tsx","Router.tsx","styles/GlobalStyle.tsx","App.tsx","index.tsx","styles/theme.ts"],"names":["BASE_URL","Loading","styled","div","Loader","style","makeImagePath","file","size","BannerBox","motion","BannerContainer","BannerImg","Banner","isLoading","data","position","left","top","transform","initial","opacity","animate","transition","delay","className","src","results","backdrop_path","title","overview","isModalIdAtom","atom","key","default","MovieBox","a","props","theme","movieSize","MovieScaleBox","boxColor","ImgBox","img","Movie","id","movieIndex","movieOnClick","movieHoverAni","useAnimation","hoverMovie","isHover","start","scale","zIndex","onClick","event","onHoverStart","onHoverEnd","onTapStart","SliderBox","SliderRow","dataLength","Slider","constraintsRef","useRef","setIsModal","useSetRecoilState","preventDefault","dragging","ref","drag","dragConstraints","dragMomentum","dragElastic","length","onDragStart","onDragTransitionEnd","map","movie","React","memo","ModalOverlay","ModalBox","bgColor","BtnClose","BgBox","bg","Modal","setIsModalId","useNavigate","useQuery","fetch","process","then","res","json","getMovieDetail","detailLoading","movieDetailData","duration","exit","xmlns","viewBox","d","ModalContainer","isModalId","useRecoilValue","AnimatePresence","MainContents","Home","movieNowData","TvShow","Nav","header","Logo","UnderLine","Gnb","ul","colors","main","Search","form","bdRadius","SearchIcon","button","fontColor","SearchInput","input","logoVariants","init","fillOpacity","hover","repeat","Infinity","searchIconVariants","toggle","Header","useState","searching","setSearching","searchInputElement","homeMatch","useMatch","tvMatch","navAni","scrollY","useViewportScroll","useEffect","onChange","get","background","searchAni","searchIconAni","width","border","current","focus","to","svg","variants","whileHover","fill","layoutId","onSubmit","type","prev","placeholder","onBlur","Router","basename","path","element","GlobalStyle","createGlobalStyle","reset","App","dotenv","config","queryClient","QueryClient","ReactDOM","render","StrictMode","secondary","btn","client","document","getElementById"],"mappings":"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","file":"static/js/main.66e04299.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getMovieNowPlaying = () => {\n  return fetch(\n    `${BASE_URL}/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport const getMovieDetail = (id: string) => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&page=1`\n  ).then((res) => res.json());\n};\n\nexport interface MovieProps {\n  id: number;\n  title: string;\n  overview: string;\n  backdrop_path: string;\n}\n\nexport interface MoviesData {\n  results: MovieProps[];\n}\n","import styled from 'styled-components';\n\ninterface styleObj {\n  [key: string]: string;\n}\n\ninterface styleProps {\n  style?: styleObj;\n}\n\nconst Loading = styled.div`\n  text-align: center;\n  padding: 1em 0;\n`;\n\nconst Loader = ({ style }: styleProps) => {\n  return <Loading style={style}>Loading...</Loading>;\n};\n\nexport default Loader;\n","export const makeImagePath = (file: string, size: string = 'w1280') => {\n  return `https://image.tmdb.org/t/p/${size}${file}`;\n};\n","import styled from 'styled-components';\nimport Loader from 'components/Loader';\nimport { makeImagePath } from 'utils';\nimport { motion } from 'framer-motion';\n\nconst BannerBox = styled(motion.div)`\n  position: relative;\n  .txt-container {\n    position: absolute;\n    left: 2%;\n    bottom: 30%;\n    .txt__title {\n      font-size: 2.5rem;\n      font-weight: 900;\n      margin-bottom: 1em;\n    }\n    .txt__description {\n      line-height: 1.5;\n      max-width: 569px;\n      word-break: keep-all;\n    }\n  }\n`;\n\nconst BannerContainer = styled.div``;\n\nconst BannerImg = styled.div`\n  padding-bottom: 56.25%;\n  position: relative;\n  z-index: 0;\n  .cover {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    z-index: 1;\n    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 1));\n  }\n  img {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 100%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\ninterface BannerProps {\n  isLoading: boolean;\n  data: {\n    results: [\n      {\n        title: string;\n        overview: string;\n        backdrop_path: string;\n      }\n    ];\n  };\n}\n\nconst Banner = ({ isLoading, data }: BannerProps) => {\n  return (\n    <BannerContainer>\n      {isLoading ? (\n        <Loader\n          style={{\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n        />\n      ) : (\n        <BannerBox\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: { delay: 0.5 } }}\n        >\n          <BannerImg>\n            <div className=\"cover\"></div>\n            <img src={makeImagePath(data.results[0].backdrop_path)} />\n          </BannerImg>\n          {data ? (\n            <div className=\"txt-container\">\n              <div className=\"txt__title\">{data.results[0].title}</div>\n              <div className=\"txt__description\">{data.results[0].overview}</div>\n            </div>\n          ) : null}\n        </BannerBox>\n      )}\n    </BannerContainer>\n  );\n};\n\nexport default Banner;\n","import { atom } from 'recoil';\n\nexport const isModalIdAtom = atom({\n  key: 'isModalShow',\n  default: '',\n});\n","import styled from 'styled-components';\nimport { motion, useAnimation } from 'framer-motion';\nimport { makeImagePath } from 'utils';\nimport { MovieProps } from 'api';\n\nconst MovieBox = styled(motion.a)`\n  width: ${(props) => props.theme.movieSize};\n  flex-shrink: 0;\n  cursor: pointer;\n  position: relative;\n  &:first-child {\n    transform-origin: 0%;\n  }\n  &:last-child {\n    transform-origin: 100%;\n  }\n  .movie__title {\n    position: absolute;\n    bottom: 1em;\n    left: 0;\n    background: rgba(0, 0, 0, 0.6);\n    padding: 1em;\n  }\n`;\n\nconst MovieScaleBox = styled(motion.div)`\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.boxColor};\n  position: relative;\n  padding-bottom: 56.25%;\n`;\n\nconst ImgBox = styled.img`\n  position: absolute;\n  width: 100%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\ninterface IMovieProps extends MovieProps {\n  movieIndex: number;\n  movieOnClick(event: React.MouseEvent<HTMLAnchorElement>, id: number): void;\n}\n\nconst Movie = ({\n  id,\n  title,\n  overview,\n  backdrop_path,\n  movieIndex,\n  movieOnClick,\n}: IMovieProps) => {\n  const movieHoverAni = useAnimation();\n\n  const hoverMovie = (isHover: boolean) => {\n    if (isHover) {\n      movieHoverAni.start({\n        scale: 1.2,\n        zIndex: 1,\n        transition: { delay: 0.2 },\n      });\n    } else {\n      movieHoverAni.start({\n        scale: 1,\n        zIndex: 0,\n        transition: { delay: 0.2 },\n      });\n    }\n  };\n\n  return (\n    <MovieBox\n      key={id}\n      initial={{ opacity: 0 }}\n      animate={{\n        opacity: 1,\n        transition: { delay: 0.5 + 0.1 * movieIndex },\n      }}\n      onClick={(event) => movieOnClick(event, id)}\n    >\n      <MovieScaleBox\n        animate={movieHoverAni}\n        onHoverStart={() => hoverMovie(true)}\n        onHoverEnd={() => hoverMovie(false)}\n        onTapStart={() => hoverMovie(false)}\n      >\n        <ImgBox src={makeImagePath(backdrop_path, 'w780')} />\n        <div className=\"movie__title\">{title}</div>\n      </MovieScaleBox>\n    </MovieBox>\n  );\n};\n\nexport default Movie;\n","import styled from 'styled-components';\nimport { motion, useAnimation } from 'framer-motion';\nimport React, { useRef, useState, useEffect } from 'react';\n\nimport { MovieProps, MoviesData } from 'api';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\n\nimport { useNavigate } from 'react-router-dom';\nimport { isModalIdAtom } from 'atoms';\nimport Movie from './Movie';\n\nconst SliderBox = styled(motion.div)`\n  width: 100%;\n  overflow: hidden;\n  padding: 2em 0;\n  /* overflow-y: visible; */\n`;\n\nconst SliderRow = styled(motion.div)<{ dataLength: number }>`\n  width: ${(props) =>\n    `calc((${props.theme.movieSize} + 10px) * ${props.dataLength} + 10px)`};\n  display: flex;\n  gap: 10px;\n  padding: 0 10px;\n  flex-wrap: nowrap;\n`;\n\nconst Slider = ({ results }: MoviesData) => {\n  // const [isHover, setIsHover] = useState(false);\n\n  const constraintsRef = useRef(null);\n  const setIsModal = useSetRecoilState(isModalIdAtom);\n\n  const movieOnClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    id: number\n  ) => {\n    event.preventDefault();\n    if (dragging) return;\n    setIsModal(id + '');\n  };\n\n  let dragging = false;\n\n  return (\n    <SliderBox ref={constraintsRef}>\n      <SliderRow\n        drag=\"x\"\n        dragConstraints={constraintsRef}\n        dragMomentum={false}\n        dragElastic={0}\n        dataLength={results.length}\n        onDragStart={() => (dragging = true)}\n        onDragTransitionEnd={() => (dragging = false)}\n      >\n        {results.map((movie: MovieProps, movieIndex: number) => {\n          return (\n            <Movie\n              key={movie.id}\n              {...movie}\n              movieIndex={movieIndex}\n              movieOnClick={movieOnClick}\n            />\n          );\n        })}\n      </SliderRow>\n    </SliderBox>\n  );\n};\n\nexport default React.memo(Slider);\n","import { getMovieDetail, MovieProps } from 'api';\nimport { isModalIdAtom } from 'atoms';\nimport { useQuery } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { useSetRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { makeImagePath } from 'utils';\nimport Loader from './Loader';\nimport { motion, useAnimation } from 'framer-motion';\n\nconst ModalOverlay = styled(motion.div)`\n  background: rgba(0, 0, 0, 0.4);\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 20;\n  width: 100%;\n  height: 100%;\n`;\nconst ModalBox = styled(motion.div)`\n  background: ${(props) => props.theme.bgColor};\n  box-shadow: 0px 0px 1px rgba(186, 186, 186, 0.2);\n  border-radius: 20px;\n  overflow: hidden;\n  position: fixed;\n  left: 50%;\n  top: 1em;\n  transform: translateX(-50%);\n  z-index: 30;\n  max-width: 569px;\n  width: 100%;\n  min-height: 700px;\n  padding-bottom: 2em;\n  .movie-txt-container {\n    padding: 2em 1em;\n    .movie__title {\n      font-size: 2.5rem;\n      font-weight: 900;\n      margin-bottom: 0.75em;\n    }\n    .movie__description {\n      padding-left: 0.25em;\n      line-height: 1.5;\n    }\n  }\n`;\n\nconst BtnClose = styled(motion.a)`\n  width: 35px;\n  height: 35px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  z-index: 31;\n  cursor: pointer;\n  background: #000;\n  padding: 5px;\n  border-radius: 50%;\n  svg {\n    width: 100%;\n    height: 100%;\n    path {\n      fill: #fff;\n    }\n  }\n`;\n\nconst BgBox = styled.div<{ bg: string }>`\n  padding-bottom: 56.25%;\n  position: relative;\n  background-image: ${(props) => `url(${makeImagePath(props.bg, 'w1280')})`};\n  background-size: cover;\n  background-position: center;\n`;\n\ninterface IModalProps {\n  id: string;\n}\n\nconst Modal = ({ id }: IModalProps) => {\n  const navigate = useNavigate();\n  const setIsModalId = useSetRecoilState(isModalIdAtom);\n\n  const modalHide = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setIsModalId('');\n  };\n\n  const { isLoading: detailLoading, data: movieDetailData } =\n    useQuery<MovieProps>(['movieDetail', id], () => getMovieDetail(id));\n\n  return (\n    <>\n      <ModalOverlay\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.2 }}\n        exit={{ opacity: 0, transition: { delay: 0.2 } }}\n      />\n      <ModalBox\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.2 }}\n        exit={{ opacity: 0, transition: { delay: 0.2 } }}\n      >\n        <BtnClose\n          className=\"btn-close\"\n          onClick={modalHide}\n          exit={{ scale: [0.8, 1], transition: { duration: 0.2 } }}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\n            <path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\" />\n          </svg>\n        </BtnClose>\n        {detailLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <BgBox bg={movieDetailData?.backdrop_path || ''} />\n            <div className=\"movie-txt-container\">\n              <div className=\"movie__title\">{movieDetailData?.title}</div>\n              <div className=\"movie__description\">\n                {movieDetailData?.overview}\n              </div>\n            </div>\n          </>\n        )}\n      </ModalBox>\n    </>\n  );\n};\n\nexport default Modal;\n","import { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Modal from 'components/Modal';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { isModalIdAtom } from 'atoms';\nimport { AnimatePresence } from 'framer-motion';\n\nconst ModalContainer = () => {\n  const isModalId = useRecoilValue(isModalIdAtom);\n\n  return (\n    <>\n      <AnimatePresence>\n        {isModalId ? <Modal id={isModalId + ''} /> : null}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default ModalContainer;\n","import { getMovieNowPlaying } from 'api';\nimport Banner from 'components/Banner';\nimport { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useRef } from 'react';\nimport Slider from 'components/Slider';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport ModalContainer from 'components/ModalContainer';\n\nconst MainContents = styled.div`\n  margin-top: -10vw;\n`;\n\nconst Home = () => {\n  const { isLoading: isLoading, data: movieNowData } = useQuery(\n    'movieNowPlaying',\n    () => getMovieNowPlaying()\n  );\n\n  return (\n    <>\n      <Banner isLoading={isLoading} data={movieNowData} />\n      <MainContents>\n        {isLoading ? null : <Slider {...movieNowData} />}\n      </MainContents>\n      <ModalContainer />\n    </>\n  );\n};\n\nexport default Home;\n","const TvShow = () => {\n  return <h1>TvShow</h1>;\n};\n\nexport default TvShow;\n","import { Link, useMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion, useAnimation, useViewportScroll } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Nav = styled(motion.header)`\n  display: flex;\n  /* align-items: center; */\n  background: rgba(0, 0, 0, 0.4);\n  padding: 0 1em;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: 10;\n`;\n\nconst Logo = styled.div`\n  width: 100px;\n  margin-right: 2em;\n  a {\n    padding: 1em 0;\n  }\n`;\n\nconst UnderLine = styled(motion.div)``;\n\nconst Gnb = styled.ul`\n  display: flex;\n  li {\n    position: relative;\n    a {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      padding: 0 1em;\n    }\n    ${UnderLine} {\n      height: 2px;\n      background: ${(props) => props.theme.colors.main};\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      margin: 0 auto;\n      width: 100%;\n    }\n  }\n`;\n\nconst Search = styled(motion.form)`\n  margin: 0.5em 0;\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n  padding: 0.25em 0.5em;\n  position: relative;\n  width: 20px;\n  border: 1px solid rgba(255, 255, 255, 0);\n  border-radius: ${(props) => props.theme.bdRadius};\n`;\n\nconst SearchIcon = styled(motion.button)`\n  width: 20px;\n  flex-shrink: 0;\n  svg {\n    path {\n      fill: ${(props) => props.theme.fontColor};\n    }\n  }\n`;\n\nconst SearchInput = styled(motion.input)`\n  padding: 0;\n  color: ${(props) => props.theme.fontColor};\n  overflow: hidden;\n  width: 30px;\n  border: none;\n  background: transparent;\n  flex-grow: 1;\n  flex-shrink: 1;\n`;\n\nconst logoVariants = {\n  init: {\n    fillOpacity: 1,\n  },\n  hover: {\n    fillOpacity: 0,\n    transition: {\n      duration: 0.5,\n      repeat: Infinity,\n    },\n  },\n};\n\nconst searchIconVariants = {\n  init: {\n    scale: 1,\n  },\n  toggle: {\n    scale: [1.2, 1],\n    transition: {\n      duration: 0.2,\n    },\n  },\n};\n\nconst Header = () => {\n  const [searching, setSearching] = useState(false);\n  const searchInputElement = useRef<HTMLInputElement>(null);\n\n  const homeMatch = useMatch('/');\n  const tvMatch = useMatch('/tv');\n\n  // 스크롤\n  const navAni = useAnimation();\n  const { scrollY } = useViewportScroll();\n\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAni.start({\n          background: 'rgba(0, 0, 0, 1)',\n        });\n      } else {\n        navAni.start({\n          background: 'rgba(0, 0, 0, .4)',\n        });\n      }\n    });\n  }, [scrollY, navAni]);\n\n  // 이벤트를 트리거로 사용가능.\n  const searchAni = useAnimation();\n  const searchIconAni = useAnimation();\n  if (searching) {\n    searchIconAni.start('toggle');\n\n    searchAni.start({\n      width: '220px',\n      background: 'rgba(55, 55, 55, 0.8)',\n      border: '1px solid rgba(255, 255, 255, 1)',\n    });\n\n    searchInputElement.current?.focus();\n  } else {\n    searchAni.start({\n      width: '20px',\n      background: 'rgba(0, 0, 0, 0)',\n      border: '1px solid rgba(255, 255, 255, 0)',\n    });\n  }\n\n  const onBlur = () => {\n    setSearching((prev) => !prev);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <Nav animate={navAni}>\n        <Logo>\n          <Link to=\"/\">\n            <motion.svg\n              variants={logoVariants}\n              initial={'init'}\n              whileHover={'hover'}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 1024 276.742\"\n            >\n              <path\n                d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\n                fill=\"#d81f26\"\n              />\n            </motion.svg>\n          </Link>\n        </Logo>\n        <Gnb>\n          <li>\n            <Link to=\"/\">Home</Link>\n            {homeMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li>\n          <li>\n            <Link to=\"/tv\">TV</Link>\n            {tvMatch && <UnderLine layoutId=\"gnbUnderLine\" />}\n          </li>\n        </Gnb>\n        <Search\n          onSubmit={onSubmit}\n          animate={searchAni}\n          transition={{ type: 'liner', delay: 0.2 }}\n        >\n          <SearchIcon\n            onClick={() => setSearching((prev) => !prev)}\n            variants={searchIconVariants}\n            animate={searchIconAni}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path d=\"M500.3 443.7l-119.7-119.7c27.22-40.41 40.65-90.9 33.46-144.7C401.8 87.79 326.8 13.32 235.2 1.723C99.01-15.51-15.51 99.01 1.724 235.2c11.6 91.64 86.08 166.7 177.6 178.9c53.8 7.189 104.3-6.236 144.7-33.46l119.7 119.7c15.62 15.62 40.95 15.62 56.57 0C515.9 484.7 515.9 459.3 500.3 443.7zM79.1 208c0-70.58 57.42-128 128-128s128 57.42 128 128c0 70.58-57.42 128-128 128S79.1 278.6 79.1 208z\" />\n            </svg>\n          </SearchIcon>\n          <SearchInput\n            placeholder=\"검색\"\n            ref={searchInputElement}\n            onBlur={onBlur}\n          />\n        </Search>\n      </Nav>\n    </>\n  );\n};\n\nexport default Header;\n","import Home from 'routes/Home';\nimport TvShow from 'routes/TvShow';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Header from 'components/Header';\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Routes>\n        <Route path=\"/*\" element={<Home />} />\n        <Route path=\"/tv\" element={<TvShow />} />\n        {/* <Route path=\"/:coinId\" element={<Coin />}>\n          <Route path=\"chart\" element={<Chart />} />\n          <Route path=\"price\" element={<Price />} />\n        </Route> */}\n        {/* <Route path=\"/*\" element={<Home />} /> */}\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n  html, body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.fontColor};\n    font-size: 16px;\n    height: 200vh;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  img,\n  svg {\n    width: 100%;\n    vertical-align: top;\n  }\n  img {\n    pointer-events: none;\n  }\n  a {\n    display: block;\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n  button {\n    border: none;\n    background: transparent;\n    padding: 0;\n    outline: none;\n    cursor: pointer;\n  }\n  input {\n    -webkit-appearance: none; // 안쪽으로 생기는 그림자 제거\n    -webkit-border-radius: 0; // 둥근 모서리 제거\n    border: 1px solid #000;\n    outline: none;\n    height: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport Router from 'Router';\nimport GlobalStyle from 'styles/GlobalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from 'styles/theme';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport dotenv from 'dotenv';\ndotenv.config();\n\n// Create a client\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={darkTheme}>\n      <QueryClientProvider client={queryClient}>\n        <RecoilRoot>\n          <App />\n        </RecoilRoot>\n      </QueryClientProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#efefef',\n  boxColor: '#fff',\n  bdRadius: '8px',\n  fontColor: '#000',\n  movieSize: '280px',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#000',\n  boxColor: '#333',\n  bdRadius: '8px',\n  fontColor: '#fff',\n  movieSize: '280px',\n  colors: {\n    main: '#3545ee',\n    secondary: 'red',\n    btn: '#7480ff',\n  },\n};\n"],"sourceRoot":""}